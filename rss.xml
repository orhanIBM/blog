<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Gatsby Starter Blog RSS Feed]]></title><description><![CDATA[A starter blog with personal notes]]></description><link>https://orhanIBM.github.io/blog</link><generator>GatsbyJS</generator><lastBuildDate>Sat, 05 Feb 2022 19:42:21 GMT</lastBuildDate><item><title><![CDATA[AWS Solutions Architect Associate]]></title><description><![CDATA[Disclaimer: This is not exhaustive list of topics, I only kept notes for the areas that I found important. IAM & AWS CLI Section 4 IAM Users…]]></description><link>https://orhanIBM.github.io/blog/aws-saa/</link><guid isPermaLink="false">https://orhanIBM.github.io/blog/aws-saa/</guid><pubDate>Fri, 21 Jan 2022 13:50:32 GMT</pubDate><content:encoded>&lt;p&gt;Disclaimer: This is not exhaustive list of topics, I only kept notes for the areas that I found important.&lt;/p&gt;
&lt;h3&gt;IAM &amp;#x26; AWS CLI&lt;/h3&gt;
&lt;p&gt;Section 4&lt;/p&gt;
&lt;h4&gt;IAM Users &amp;#x26; Groups, Policies&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;IAM is a global service&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Root is the default account, do not share it&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Users are people&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Groups contain only users not other groups (exam question)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Users do not have to be part of a Group&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Users can be part of more than one Group&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Users OR Groups can be assigned policies, remember single users as well, because some users may not be part of a group&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Policies define permissions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You apply the least privilege principles&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Why create a user? To better classify users and assign policies. Not everyone will be a root, just the main person&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;IAM Policies Inheritance&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Users can be assigned to multiple teams and inherit the policies of the teams policies&lt;/li&gt;
&lt;li&gt;IAM Policies can be an exam question, understand the principal (account/user/role that policy applies), action (get or list, post, delete), resource (aws resource) and effect (allow/deny) and finally Condition, there is no version in the Policy Statements (the JSON document)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;IAM Password Policy&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Use strong password, set min length + require specific char types&lt;/li&gt;
&lt;li&gt;Require users to change their pw after some time&lt;/li&gt;
&lt;li&gt;Prevent pw re-use&lt;/li&gt;
&lt;li&gt;MFA - Multi Factor Authentication, recommended&lt;/li&gt;
&lt;li&gt;What is the main benefit of MFA? Hackers&lt;/li&gt;
&lt;li&gt;[Exam] MFA devices options? Virtual, ie Google Authenticator, Microsoft Authenticator, Authy for multiple tokens, as well as Universal 2nd Factor Security Key such as Ubikey. Hardware Key Fob MFA device is Gemalto and for government *AWS GovCloud US, ther eis a dedicated Hardware Key Fob&lt;/li&gt;
&lt;li&gt;Password Policy setup for IAM users enhances the security&lt;/li&gt;
&lt;li&gt;Other security credentials are Access Keys / CloudFront Key pairs/ X509 Certificates&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;AWS Access Keys, CLI and SDK&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;How can users access AWS: AWS Mgmt Console, via CLI (protected by access keys) and finally AWS SDK, used for code and protected by access keys&lt;/li&gt;
&lt;li&gt;Access Keys are secret too, not just Secret Key is secret, so don’t share&lt;/li&gt;
&lt;li&gt;Whatever user permission have, it will be the same for the CLI (since you are using the same user credentials) root user’s CLI have all the permissions&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;AWS CloudShell&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;AWS CloudShell allows you to use commands without installing the CLI&lt;/li&gt;
&lt;li&gt;The region is what you selected on the console&lt;/li&gt;
&lt;li&gt;Files created within the cloudshell is persisted for the region&lt;/li&gt;
&lt;li&gt;You can upload / download files into/from cloudshell&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;IAM Roles for Services&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;IAM Roles for Services, is the Role (set of permissions that can make request) for an AWS resource, such as an EC2 needs permission to perform actions on our behalf on the cluster&lt;/li&gt;
&lt;li&gt;The permission given to the AWS Resource is called IAM Role for Services&lt;/li&gt;
&lt;li&gt;i.e. Lambda Functions and Roles for CloudFormation are a few examples&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;IAM Security Tools&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;IAM Credentials Report (account-level): list all accounts and status of their credentials (last password change, MFA availability, etc)&lt;/li&gt;
&lt;li&gt;IAM Access Advisor (user-level): service permissions granted to a user + last access to AWS service + policies granting the permission. To revise user policies you can use Access Advisor report&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;IAM Best Practices&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Don’t use root other than account setup&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;One AWS User = One Physical User&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Assign users to Groups and assign permissions, note Groups cannot be part of other Groups&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Assign Roles to AWS Services for automatic access&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Policies: JSON document outlines permissions for making request to AWS resources, can be used by Users, Groups and Roles&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a strong password policy&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use and enforce MFA&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use Access Keys for CLI/SDK etc. i.e. Terraform or webapp call&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Audit permissions of an account with the IAM Credentials Report&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Never share IAM users + access keys&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[Potential Exam] select AWS security best practices from the list, or which one is not a security best practice&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;EC2 Fundamentals&lt;/h3&gt;
&lt;p&gt;Section 5&lt;/p&gt;
&lt;h4&gt;EC2 Basics&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Set up a budget so we don’t overpay&lt;/li&gt;
&lt;li&gt;Most popular&lt;/li&gt;
&lt;li&gt;Elastic Compute Cloud&lt;/li&gt;
&lt;li&gt;EC2 settings: OS, CPU, RAM, Storage (EBS &amp;#x26; EFS for Network-attached or directly attached to EC2 hardware called EC2 Instance Store), Network Card (speed of the card and Public IP Address), Firewall Rules and User Data for Bootstrap Script&lt;/li&gt;
&lt;li&gt;EC2 User Data runs as root, so runs as sudo&lt;/li&gt;
&lt;li&gt;EC2 User Data will be base64 encoded&lt;/li&gt;
&lt;li&gt;A restarted EC2 instance gets a new public IP&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;EC2 Instance Types&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;General Types, balance between compute, memory, networking, T class&lt;/li&gt;
&lt;li&gt;Compute Optimized: Batch processing, media transcoding, high performance computing, machine learning and dedicated gaming server, choose C class&lt;/li&gt;
&lt;li&gt;Memory Optimized: Large Data Sets in Memory so high performance databases, distributed cache, in memory databases for business intelligence, real time processing of big unstructured data, all require RAM, so choose R class&lt;/li&gt;
&lt;li&gt;Storage Optimized: High frequency online transaction processing, SQL, MongoDB, Redis, Data Warehousing, Distributed File Systems: choose Input output or Data classes: I or D&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Security Group&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Only Allow Rule, no Deny&lt;/li&gt;
&lt;li&gt;Allow Protocol (TCP, UDP etc), Type (HTTP, TCP), Port # (80, 443) and IP Range (0.0.0.0/0, all or another Security Group)&lt;/li&gt;
&lt;li&gt;If you attach a security group to an EC2 instance (say sg1), and create another EC2 Instance and attach a security group to the new instance with the rule: sg1 is allowed, then the traffic coming from the first EC2 with sg1 can access the second EC2&lt;/li&gt;
&lt;li&gt;Ports to know in the exam
&lt;ul&gt;
&lt;li&gt;22 SSH&lt;/li&gt;
&lt;li&gt;21 FTP&lt;/li&gt;
&lt;li&gt;22 SFTP&lt;/li&gt;
&lt;li&gt;80 Unsecured Web&lt;/li&gt;
&lt;li&gt;443 Secured Web (HTTPS)&lt;/li&gt;
&lt;li&gt;3389 RDP - Remote Desktop Protocol for Windows&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;EC2 Instance Roles Demo&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;When you need your EC2 to execute an action on your behalf, never enter your credentials, instead use IAM Role&lt;/li&gt;
&lt;li&gt;For instance, go to EC2 Connect screen (instead of ssh’ing), and type $aws iam list-users you will get Unable to locate credentials, please configure. But don’t instead attach a role, and then re-run the list-users, and then you will get the results&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;EC2 Instance Purchasing Options&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;[EXAM QUESTION] Pick the cheapest or most appropriate EC2 Option below given a scenario&lt;/li&gt;
&lt;li&gt;On-Demand: Short-workload, predictable pricing&lt;/li&gt;
&lt;li&gt;1 Year Minimum Reserved Instances:
&lt;ul&gt;
&lt;li&gt;Reserved: Long Workload&lt;/li&gt;
&lt;li&gt;Convertible Reserved Instances: Long workload with the option to change the tier&lt;/li&gt;
&lt;li&gt;Scheduled Reserved: every Monday 7am for 1hr (no more available)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spot Instances: Short workloads, cheap but can lose instance during work&lt;/li&gt;
&lt;li&gt;Dedicated: Book the entire physical server, you can control the placement&lt;/li&gt;
&lt;li&gt;Scenarios:&lt;/li&gt;
&lt;li&gt;Client wants to use short-term uninterrupted workload, can’t predict application behaviour if interrupted, doesn’t care about the cost: EC2 On Demand has the highest cost&lt;/li&gt;
&lt;li&gt;75% discount compared to on-demand, can use it for database for 3 years: Reserved Instance&lt;/li&gt;
&lt;li&gt;Same as above but wants to have the flexibility to upgrade if application scales: Convertible Reserve Instances&lt;/li&gt;
&lt;li&gt;Client wants the cheapest of all solutions: Spot-price up to 90% discount but doesn’t care if the process is interrupted, such as data analysis, batch processing, image processing, distributed workload etc: EC2 Spot Instances (spot market vs bid price)&lt;/li&gt;
&lt;li&gt;Help client address compliance requirements and reduce costs by allowing to use existing server-bound software licenses: EC2 Dedicated Hosts, more expensive, you can bring your own license, or due to regulations you cannot share the server&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Spot Instances&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Can get up to 90% discount&lt;/li&gt;
&lt;li&gt;Define the max spot price you wanna pay, if the current price is below of your price, you reserve an instance&lt;/li&gt;
&lt;li&gt;When spot price goes above your max price you have 2 options
&lt;ul&gt;
&lt;li&gt;Stop/Terminate the instance with a 2 min grace period&lt;/li&gt;
&lt;li&gt;Block the spot during a specified timeframe without interruption (not available anymore on AWS, can be in the exam)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Remember, spot is not good for databases/critical workload&lt;/li&gt;
&lt;li&gt;Spot instances can be launched for 1 time or persistently&lt;/li&gt;
&lt;li&gt;Set the # of instances, types, valid from/to and price then it will add instances when the criteria are met&lt;/li&gt;
&lt;li&gt;To stop spot instances, first stop the setting, then the instances&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Spot Fleets&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;What if you want to hit a target capacity under a price constraint? Spot Fleets allow us to automatically request Spot Instances w/ the lowest price&lt;/li&gt;
&lt;li&gt;You can get 1 m5.large or 10 t2.micro both of which can give you the same capacity (let’s say), but their  prices are different, how can you optimize your cost?&lt;/li&gt;
&lt;li&gt;Welcome to Spot Fleets, it pics the spot instance from possible launch pools: instance types, OS, Availability Zones and stops launching more instances when it hits the max cost or capacity&lt;/li&gt;
&lt;li&gt;Strategies to allocate Spot instances:
&lt;ul&gt;
&lt;li&gt;LowestPrice: use for cost optimization and short workload&lt;/li&gt;
&lt;li&gt;Diversified: distribute across all pools, so good for availability + longer workload&lt;/li&gt;
&lt;li&gt;capacityOptimized: pool with the optimal capacity for the number of instances&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;EC2 - Solutions Architect Associate Level&lt;/h3&gt;
&lt;p&gt;Section 6&lt;/p&gt;
&lt;h4&gt;Private vs Public vs Elastic IP&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;IPv4 and IPv6 supported&lt;/li&gt;
&lt;li&gt;Companies have private networks 192.168.0.1/22 and can talk to each other&lt;/li&gt;
&lt;li&gt;But as soon as the private network machine needs to go outside world, it goes through an internet gateway, which has a public ip (253.144.135.205)&lt;/li&gt;
&lt;li&gt;So our VPC is private and IG allows machines to connect to internet&lt;/li&gt;
&lt;li&gt;Elastic IP is a static IP, that masks the machines, so if a machine fails, you can replace it and attach the Elastic IP onto it, voila. But that is good for small number of machines&lt;/li&gt;
&lt;li&gt;As the infra grows, a better architecture is Load Balancer and DNS names; will be discussed later&lt;/li&gt;
&lt;li&gt;If you stop / start the instance, the IP address changes as well&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;EC2 Placement Groups&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;One of the three: Cluster, Spread, Partition&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you need low latency, high network throughput or big data job needs to be done fast, put them close to each other: Cluster them on the same AZ (us-east-1a, 1b, 1c), same hardware (rack)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you need high availability cuz you have critical applications, put them far from each other, one in each AZ with max 7 instances per group per AZ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you use HDFS, Hadoop, Cassandra, Kafka, you need partitions, such that if a rack (hardware) fails, application will go to the next partition. Say you have 3 partitions, p1 goes to us-east-1a rack1, p2 goes to the same AZ but on rack2, and p3 goes to another AZ say us-east-1c on rack1, so if a rack fails, next partition picks up the tab. However, you can have up to 7 partitions per az (i.e. 7 racks in us-east-1a), but also your app can span across multiple AZs in the same region, so in Ohio region, I can have us-east-2a, 2b, 2c, 2d… In each Rack, (partition) you can have 100s of EC2s&lt;/p&gt;
&lt;p&gt;Elastic Network Interfaces&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ENI is a virtual network software, separating the network connection from machines, so that if an EC2 fails, you can just move ENI to a new machine on the fly&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ENIs can have one Private IP, MAC Address, Elastic IP, and Public IP and more Secondary Private IPv4&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can attach security groups (one or more) to the ENI&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can attach multiple ENIs to one EC2 Instance (eth0, eth1 etc)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ENIs are bound to the AZ it is created at, ENI cannot be transferred to another AZ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use case: Failovers&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;EC2 Hibernate&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;If we stop instance data on disk (EBS) is kept intact, terminate: any EBS data is gone&lt;/li&gt;
&lt;li&gt;But either way, data on RAM is gone&lt;/li&gt;
&lt;li&gt;What if the in-memory state is preserved? So that when the instance is booted, we continue where we left off, no need to re-install user data or anything like that&lt;/li&gt;
&lt;li&gt;Requirements: RAM is dumped into a file in the root EBS volume and volume must be encrypted&lt;/li&gt;
&lt;li&gt;RAM size must be less than 150GB (remember GBs of data is put into disk)&lt;/li&gt;
&lt;li&gt;Not supported for bare metal and some other families&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;EC2 - Advanced Concepts&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Nitro - vCPU - Capacity Reservations&lt;/li&gt;
&lt;li&gt;Nitro is the next generation of virtualization technology for better performance, enhanced networking, IPv6 support, higher EBS volumes, 64,000 EBS IOPS on Nitro (exam, higher EBS IOPS, require Nitro)&lt;/li&gt;
&lt;li&gt;vCPU = Thread x Core, but at launch time we can tweak # of Threads or Core Counts to optimize CPU&lt;/li&gt;
&lt;li&gt;For instance, some licenses are tied to CPU Core, so you can increase the thread per core but decrease the number of cores, so you end up with the same vCPU but minimize license cost. Alternatively, if you are high frequency trader that requires HPC, then single thread is faster than multithreading, thus you can say one thread per core pls&lt;/li&gt;
&lt;li&gt;Capacity Reservation: Reserve Capacity but don’t tie yourself to 1year or 3year commitments&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;EC2 Instance Storage&lt;/h3&gt;
&lt;p&gt;Section 7&lt;/p&gt;
&lt;h4&gt;EBS Overview&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Elastic Block Store&lt;/li&gt;
&lt;li&gt;EBS Volume is a NETWORK drive&lt;/li&gt;
&lt;li&gt;Just like ENI, it is an abstraction of hard disk, so you can attach to your instances&lt;/li&gt;
&lt;li&gt;EBS is LOCKED TO AN AZ BUT CAN BE MOVED ACROSS AFTER A SNAPSHOT&lt;/li&gt;
&lt;li&gt;Since EBS is a network drive, there is a potential latency, compared to an SSD on the machine&lt;/li&gt;
&lt;li&gt;Multiple EBS can be attached to single EC2&lt;/li&gt;
&lt;li&gt;[Exam] Delete on Termination Attribute: by default the root EBS volume is deleted and any other attached EBS volume is not deleted, to preserve data disable deletion&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;EBS Snapshot&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Not a requirement but suggested, detach EBS, snapshot it, and move it to new AZ&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;AMI Overview&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Amazon Machine Image&lt;/li&gt;
&lt;li&gt;Customization of EC2 instance, so start an httpd machine&lt;/li&gt;
&lt;li&gt;AMI IS REGION SPECIFIC BUT CAN BE COPIED&lt;/li&gt;
&lt;li&gt;Process: create an EC2 instance, customize, stop ec2, build ami (creates ebs snapshot too)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;EC2 Instance Store&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;EBS is a network drive, but if you need high-performance disk, use EC2 Instance Store&lt;/li&gt;
&lt;li&gt;Information in EC2 Instance Store is Ephemeral&lt;/li&gt;
&lt;li&gt;Use case: Buffer / cache / scratch data/ temporary content, remember EPHEMERAL&lt;/li&gt;
&lt;li&gt;Risk of data loss, so user has to backup + replicate&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;EBS Volume Types&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;6 types
&lt;ul&gt;
&lt;li&gt;GP2 / GP3: SSD balanced, 16TiB,&lt;/li&gt;
&lt;li&gt;IO1/ IO2 SSD: mission critical + low latency / high throughput&lt;/li&gt;
&lt;li&gt;ST1 HDD: frequently accessed + throughput intensive&lt;/li&gt;
&lt;li&gt;SC1 HDD: less frequently accessed data&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cost (Cheap to Expensive) sc1, st1, gp, io&lt;/li&gt;
&lt;li&gt;Performance (High to low) io, gp, st, sc&lt;/li&gt;
&lt;li&gt;Should be available as root volume: only gp2/gp3 and io1/io2&lt;/li&gt;
&lt;li&gt;When to use gp2/gp3?
&lt;ul&gt;
&lt;li&gt;When you need cost effective storage with low latency&lt;/li&gt;
&lt;li&gt;When you need to access system boot volumes&lt;/li&gt;
&lt;li&gt;When the size is less than 16TiB&lt;/li&gt;
&lt;li&gt;Use gp3 when you need to increase iops 16,000 and throughput 1000MiB/s independently&lt;/li&gt;
&lt;li&gt;Use gp2 when you don’t care, and iops and size are linked&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;When to use iops (provisioned iops)
&lt;ul&gt;
&lt;li&gt;Database workloads, sensitive to storage performance + consistency&lt;/li&gt;
&lt;li&gt;IO per second more than 16,000&lt;/li&gt;
&lt;li&gt;Or critical business applications with sustained io performance&lt;/li&gt;
&lt;li&gt;When you need EBS Multi-attach option&lt;/li&gt;
&lt;li&gt;And when you need sub-milisecond latency + 256,000 iops use io2 Block Express&lt;/li&gt;
&lt;li&gt;For IO more than 32,000 EC2 should be Nitro&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;HDD
&lt;ul&gt;
&lt;li&gt;Cannot be boot&lt;/li&gt;
&lt;li&gt;Min 125MiB&lt;/li&gt;
&lt;li&gt;Big data, data warehouses, log processing: st1&lt;/li&gt;
&lt;li&gt;For data that is infrequently used: sc1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;EBS Multi Attach&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Use case: Achieve high application availability in clustered Linux application&lt;/li&gt;
&lt;li&gt;Applications that must manage concurrent write operations&lt;/li&gt;
&lt;li&gt;Then use io1/io2 family EBS to have multiple EC2 writing into the same volume&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;EBS Encryption&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;When you create an encrypted EBS volume:
&lt;ul&gt;
&lt;li&gt;Encrypted at rest, in flight, snapshots and volumes created out of it&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Encryption has low impact on latency&lt;/li&gt;
&lt;li&gt;Leverages keys from KMS&lt;/li&gt;
&lt;li&gt;Can convert unencrypted EBS to encrypted through a snapshot process&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;EFS&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Elastic File System&lt;/li&gt;
&lt;li&gt;Managed NFS network file system&lt;/li&gt;
&lt;li&gt;Can be mounted to many EC2&lt;/li&gt;
&lt;li&gt;Multi AZ (unlike EBS)&lt;/li&gt;
&lt;li&gt;More expensive compared to gp2, but you pay per use gb&lt;/li&gt;
&lt;li&gt;EFS is only Linux doesn’t work on Windows os&lt;/li&gt;
&lt;li&gt;1000s of concurrent NFS clients can connect to EFS&lt;/li&gt;
&lt;li&gt;Grows to petabyte scale network file system,automatically&lt;/li&gt;
&lt;li&gt;By default EFS is in Performance mode: latency sensitive use cases such as content management, web server, wordpress etc, if you need big data or media processing where latency is not critical but can process in parallel choose Max I/O under performance mode&lt;/li&gt;
&lt;li&gt;After selecting Performance mode, decide on throughput mode, whether it should be a burst mode or constant speed mode, where size of the disk is not a factor&lt;/li&gt;
&lt;li&gt;Finally: Storage Tiers: move file after N days, for Standard: frequently access files and EFS-IA for less frequently accessed data, but when accessed, it costs $&lt;/li&gt;
&lt;li&gt;Select Security Group: for allowing efs access, the type is NFS and security group should point to security group attached to EC2&lt;/li&gt;
&lt;li&gt;for EC2, you need to mount the EFS to EC2, see the guide for more&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;EBS vs EFS&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Number of instances: EBS-One, EFS-Many&lt;/li&gt;
&lt;li&gt;AZ: EBS-Single AZ, unless snapshot + transfer, EFS-Many&lt;/li&gt;
&lt;li&gt;Termination: EBS-terminated by default, but can be adjusted, EFS-persists&lt;/li&gt;
&lt;li&gt;Price: EFS is more expensive than EBS, but can be cheaper if data amount is small and allow Infrequent Access to save costs&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ELB + ASG: HA and Scalability&lt;/h3&gt;
&lt;p&gt;Section 8&lt;/p&gt;
&lt;h4&gt;ELB&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Load balancer, like managed nginx&lt;/li&gt;
&lt;li&gt;Why not use nginx directly? Ease of integration with other AWS offerings&lt;/li&gt;
&lt;li&gt;ELB is always HA by default, no need to have a backup ELB&lt;/li&gt;
&lt;li&gt;ELB can do auto healthchecks (but nginx can do it too)&lt;/li&gt;
&lt;li&gt;Old ELB - deprecated: Classic Load Balancer: HTTP/S, TCP, SSL (Secure TCP)&lt;/li&gt;
&lt;li&gt;App Load Balancer: HTTP/S and WebSocket&lt;/li&gt;
&lt;li&gt;Network Load Balancer: TCP, TLS, UDP&lt;/li&gt;
&lt;li&gt;Gateway Load Balancer: Layer 3 load balancer at Network Layer - IP Protocol&lt;/li&gt;
&lt;li&gt;Public ELB: Set Security Group(SG) to allow internet on port 80/443, then EC2 security groups only allowing the SG attached to ELB&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;ALB&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Layer 7 - HTTP/WebSocket grpc&lt;/li&gt;
&lt;li&gt;LB multiple apps on the same EC2 running on containers&lt;/li&gt;
&lt;li&gt;Supports redirects&lt;/li&gt;
&lt;li&gt;Routing table to different target group, based on url/path/query&lt;/li&gt;
&lt;li&gt;ALB can route to EC2, ECS, Lambda fn or private IP addresses&lt;/li&gt;
&lt;li&gt;ALB gets fixed hostname, xxx.region.elb.amazonaws.com so Route 53 can easily refer to&lt;/li&gt;
&lt;li&gt;EC2 machines behind ALB can get client IP’s through X-Forwarded-For header&lt;/li&gt;
&lt;li&gt;Set Rules for path/headers/query string etc for electing target groups&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;NLB&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Layer 4 - TCP/UDP&lt;/li&gt;
&lt;li&gt;Can handle MM request per second&lt;/li&gt;
&lt;li&gt;Latency is lower compared to ALB, so good for gaming&lt;/li&gt;
&lt;li&gt;NLB gets a static IP address, unlike ALB that gets a static hostname, thus you can whitelist an IP address&lt;/li&gt;
&lt;li&gt;To get around the above case, you can assign an Elastic IP to ALB/NLB&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Gateway Load Balancer&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Layer 3 - IP Packets&lt;/li&gt;
&lt;li&gt;Combines Transperent Network Gateway and Load Balancers&lt;/li&gt;
&lt;li&gt;Uses the GENEVE protocol on port 6081&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Session Stickiness&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Application based cookies or Duration Based Cookies&lt;/li&gt;
&lt;li&gt;Used for session cookies&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Cross-Zone Load Balancing&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Allows even distribution amongst the EC2s irrespective of number of EC2 in an AZ&lt;/li&gt;
&lt;li&gt;ALB is always on, no inter AZ transfer fee&lt;/li&gt;
&lt;li&gt;NLB is disabled by default, pay for inter AZ transfer fee&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;SSL Certificates&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;ELB uses an X.509 cert&lt;/li&gt;
&lt;li&gt;SNI: Server Name Indication is a header, client should add it to the header&lt;/li&gt;
&lt;li&gt;SNI allows servers to load the correct SSL cert for the correct website on the machine&lt;/li&gt;
&lt;li&gt;SNI solves multi websites on a single host problem&lt;/li&gt;
&lt;li&gt;On AWS only ALB/NLB/CloudFront allows&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Complete In-Flight Requests&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;How to stop EC2 when the connection is still active&lt;/li&gt;
&lt;li&gt;Deregistration Delay feature for ALB/NLB&lt;/li&gt;
&lt;li&gt;If your request/response cycle is fast, set this to low otherwise (photo upload feature) set to high so you drain EC2 properly&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;ASG&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Scale in or out and automatically add EC2s to the target group so ELB can refer to&lt;/li&gt;
&lt;li&gt;ASG refers to average metrics and not the min or max&lt;/li&gt;
&lt;li&gt;Tracking policies:
&lt;ul&gt;
&lt;li&gt;ASG CPU around 50% : Target Tracking&lt;/li&gt;
&lt;li&gt;When a CloudWatch alarm is triggered (CPU greater or less than a certain percentage): Simple/Step scaling&lt;/li&gt;
&lt;li&gt;On Monday 9am: Scheduled scaling&lt;/li&gt;
&lt;li&gt;Forecast load and schedule ahead: Predictive Scaling&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Scale based on CPU/RAM/Traffic etc&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;RDS and ElastiCache&lt;/h3&gt;
&lt;p&gt;Section 9&lt;/p&gt;
&lt;h4&gt;RDS&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Relational Database Service&lt;/li&gt;
&lt;li&gt;Postgres, MySQL, MariaDB, Oracle, Microsoft SQL, Aurora (AWS Prop)&lt;/li&gt;
&lt;li&gt;Storage can autoscale automatically, good for unpredictable&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Read Replicas vs Multi AZ&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Read Replicas, up to 5&lt;/li&gt;
&lt;li&gt;Within the same AZ, Cross AZ or Cross Region&lt;/li&gt;
&lt;li&gt;But since Cross Region is there, it is not real time, thus ASYNC/Eventually consistent&lt;/li&gt;
&lt;li&gt;Once Write fails, Read can be promoted, but needs app configuration (promoted db url)&lt;/li&gt;
&lt;li&gt;Network cost: RDS same replicas within the same region, no fee for cross AZ data transfer, but $$ for Cross Region&lt;/li&gt;
&lt;li&gt;Multi AZ Disaster Recovery: one DNS name, Standby database located in a different AZ is sync in real time, no other access, promoted to Master when needed&lt;/li&gt;
&lt;li&gt;Read Replicas can be set up as Multi AZ for Distaster Recovery too&lt;/li&gt;
&lt;li&gt;Master settings can be modified in real-time to create a standby db in another AZ&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Encryption&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;At rest encrpytion&lt;/li&gt;
&lt;li&gt;Defined at launch time&lt;/li&gt;
&lt;li&gt;[Exam question] if Master is not encrypted, read replicas are not encrpyted as well&lt;/li&gt;
&lt;li&gt;For Oracle / SQL Server there is Transperent Data Encryption&lt;/li&gt;
&lt;li&gt;Encryption through with AWS KMS - AES 256&lt;/li&gt;
&lt;li&gt;In-flight encryption is possible too; you just need to enforce it&lt;/li&gt;
&lt;li&gt;You can also convert un-encrypted db to encrypted db&lt;/li&gt;
&lt;li&gt;IAM policies help who can create/delete dbs, and standard username/password to login the db&lt;/li&gt;
&lt;li&gt;For PostgreSQL and MySQL you can also use IAM based auth, through IAM &amp;#x26; RDS API Calls, the password is short lived&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Amazon Aurora&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Aurora automatically scales out, all the way up to 128TB, i.e. never run out of space&lt;/li&gt;
&lt;li&gt;Aurora can have 15 replicas and fast read replicas&lt;/li&gt;
&lt;li&gt;HA is already built in, so should one db fail, other one picks up automatically&lt;/li&gt;
&lt;li&gt;6 copies of your data is on 3 AZ (4 for writes 3 for reads)&lt;/li&gt;
&lt;li&gt;Supports global database version, i.e. data replicated across regions&lt;/li&gt;
&lt;li&gt;Application points to a single DNS name for WRITE, and even if the db fails, aurora promotes a read replica but dns name does not change&lt;/li&gt;
&lt;li&gt;Application points to Reader Endpoint which is a Load Balancer, so you can scale up to 15 reads and don’t change the code&lt;/li&gt;
&lt;li&gt;Possibility to create certain endpoints, pointing to larger read db’s (i.e. big data analysis reasons or annual reporting etc.)&lt;/li&gt;
&lt;li&gt;Can implement scaling policy to increase the number of read replicas&lt;/li&gt;
&lt;li&gt;Security at Aurora is the same as RDS, so can’t ssh, protect with security groups; encrypted at rest, can use IAM etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Advanced Concepts on Aurora&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;If the db workload is intermittent, then choose Aurora Serverless because no capacity planning needed and pay per second used&lt;/li&gt;
&lt;li&gt;High Availability is a requirement and immediate failover for write node: every node is both read and write&lt;/li&gt;
&lt;li&gt;Aurora Global Database: Useful for disaster recovery but promoting to another region less than 1 minute&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;ElastiCache Overview&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Managed Redis/Memcached&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Note, using ElastiCache requires heavy application code changes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If not a cache hit, go query the db update elasticache and return the result (depending on cache invalidation strategy)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A use case is session data stored at ElastiCache&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[Exam] Redis vs Memcached&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Redis______________________Memcached&lt;/li&gt;
&lt;li&gt;Multi AZ + auto-failover_____Sharding, multi-node&lt;/li&gt;
&lt;li&gt;Data Replicated thus HA____No replication, no HA&lt;/li&gt;
&lt;li&gt;Data can be durable________No data persistency&lt;/li&gt;
&lt;li&gt;Backup_____________________No backup&lt;/li&gt;
&lt;li&gt;Restore____________________No restore&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Why Memcached? Sharding reasons, speed up dynamic web apps&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Why Redis? In-memory data for db cache or message broker&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Elastiache does not support IAM authentication&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IAM policies are only for AWS API level&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Password/token can be created to secure the cache access&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Supports security groups so only certain EC2 can access&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Caching patterns: lazy load, write through, session store&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Gaming leaderboard is an [exam] use case through Redis Sorted sets&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Route 53&lt;/h3&gt;
&lt;p&gt;Section 10&lt;/p&gt;
&lt;h4&gt;Route 53 Overview&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;DNS and domain registrar&lt;/li&gt;
&lt;li&gt;Users can change DNS records to add/remove domain names&lt;/li&gt;
&lt;li&gt;Users can buy domain names&lt;/li&gt;
&lt;li&gt;The only AWS svc that provides 100% availability in the SLA&lt;/li&gt;
&lt;li&gt;Record: How do you want to route traffic to a domain&lt;/li&gt;
&lt;li&gt;Record should contain domain name, record type, value, routing policy and TTL&lt;/li&gt;
&lt;li&gt;[Exam] must know A/AAAA/CNAME/NS record types&lt;/li&gt;
&lt;li&gt;A Record = host name =&gt; IPv4 &lt;a href=&quot;http://www.orhan.com&quot;&gt;www.orhan.com&lt;/a&gt; =&gt; 12.34.56.78&lt;/li&gt;
&lt;li&gt;AAAA Record = host name =&gt; IPv6&lt;/li&gt;
&lt;li&gt;CNAME = canonical name record, used to alias one domain name to another ie &lt;a href=&quot;http://www.orhan.com&quot;&gt;www.orhan.com&lt;/a&gt; =&gt; &lt;a href=&quot;http://www.ibm.com&quot;&gt;www.ibm.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Note cannot create CNAME for &lt;a href=&quot;http://orhan.com&quot;&gt;http://orhan.com&lt;/a&gt;, but for &lt;a href=&quot;http://www.orhan.com&quot;&gt;http://www.orhan.com&lt;/a&gt; or &lt;a href=&quot;http://blog.orhan.com&quot;&gt;http://blog.orhan.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Why not? &lt;a href=&quot;https://www.freecodecamp.org/news/why-cant-a-domain-s-root-be-a-cname-8cbab38e5f5c/&quot;&gt;See here - freecodecamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;NS - Name Servers for the Hosted Zone&lt;/li&gt;
&lt;li&gt;Hosted zones: records of domain and its sub domains&lt;/li&gt;
&lt;li&gt;Public hosted zone: app.example.com&lt;/li&gt;
&lt;li&gt;Private hosted zone: within VPC, app.example.internal&lt;/li&gt;
&lt;li&gt;In a private hosted zone, an EC2 with webapp.acme.internal can ping api.acme.internal and get the local IP of the api server on an another EC2 and send the request. The api server then can try to connect the local db through db.acme.internal and get the local ip of the database and query the db&lt;/li&gt;
&lt;li&gt;TTL: cache the IP address for the duration of the seconds so the dns query is not sent again, high TTL means don’t come to the DNS server for a while. If the records are not changing that often, then keep it longer period&lt;/li&gt;
&lt;li&gt;CNAME vs Aliases, remember Canonical Name or CNAME is a pointer to another domain, such as &lt;a href=&quot;http://api.acme.com&quot;&gt;http://api.acme.com&lt;/a&gt; =&gt; &lt;a href=&quot;http://ibm.com&quot;&gt;http://ibm.com&lt;/a&gt; or to =&gt;&lt;a href=&quot;http://version2.acme.com&quot;&gt;http://version2.acme.com&lt;/a&gt;; Alias points to an AWS Resources and your root domain &lt;a href=&quot;http://acme.com&quot;&gt;http://acme.com&lt;/a&gt; can point to an AWS ELB, you cannot achieve that with CNAMEs&lt;/li&gt;
&lt;li&gt;Alias can refer to ELB CloudFront, API Gateway, Elastic Beanstalk, S3 Websites, Global Accelerator, Route 53 Record but not EC2 DNS Name! And cannot set TTL on Alias&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Route 53 Routing&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Simple: route to single record A/AAAA, for multiple return, random chosen, so cannot associate w/ health checks&lt;/li&gt;
&lt;li&gt;Weighted: Load balancing between regions, A/B testing, 0 weight can be assigned, failover supported&lt;/li&gt;
&lt;li&gt;Failover: (Active-Passive), if health check fails, route the requests to the second record&lt;/li&gt;
&lt;li&gt;Latency Based: Lowest latency to the user from AWS region, failover supported&lt;/li&gt;
&lt;li&gt;Geolocation: Where the user is located, geo IP, used for content restriction&lt;/li&gt;
&lt;li&gt;Geoproximity:  Location based on bias, so on the US map, 90-10 split, so east of Chicago goes to East and west of Chicago goes to West servers&lt;/li&gt;
&lt;li&gt;multi-value&lt;/li&gt;
&lt;li&gt;Private subnet healthcheck since Route 53 cannot access private zone? Create a CloudWatch Metric and associate CW Alarm and Health Check will then check the alarm itself&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Amazon S3&lt;/h3&gt;
&lt;p&gt;Section 12&lt;/p&gt;
&lt;h3&gt;AWS SDK, IAM&lt;/h3&gt;
&lt;p&gt;Section 13&lt;/p&gt;
&lt;h3&gt;S3 and Athena&lt;/h3&gt;
&lt;p&gt;Section 14&lt;/p&gt;
&lt;h3&gt;CloudFront &amp;#x26; Global Accelerator&lt;/h3&gt;
&lt;p&gt;Section 15&lt;/p&gt;
&lt;h3&gt;Storage Extras&lt;/h3&gt;
&lt;p&gt;Section 16&lt;/p&gt;
&lt;h3&gt;Decoupling Applications&lt;/h3&gt;
&lt;p&gt;Section 17&lt;/p&gt;
&lt;h4&gt;Messaging&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Synchronous vs Asynchronous&lt;/li&gt;
&lt;li&gt;Async is mostly event based&lt;/li&gt;
&lt;li&gt;There are ways to decouple applications, queueing, publish/subscribe or real-time stream&lt;/li&gt;
&lt;li&gt;queue: SQS, pub/sub: SNS, real-time stream: Kinesis&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;SQS&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Standard Queue, such as IBM MQ&lt;/li&gt;
&lt;li&gt;Application decoupling in the exam is SQS&lt;/li&gt;
&lt;li&gt;Unlimited throughput and unlimited number of days&lt;/li&gt;
&lt;li&gt;Retention is between 1 min and 14 days&lt;/li&gt;
&lt;li&gt;Latency less than 10ms&lt;/li&gt;
&lt;li&gt;Size 256KB per message&lt;/li&gt;
&lt;li&gt;Standard Queue can have at least once delivery, occasionaly (alternative is FIFO)&lt;/li&gt;
&lt;li&gt;Can have out of order messages, so not orderly&lt;/li&gt;
&lt;li&gt;SendMessage API sends message to SQS Queue, messages is persisted, until a consumer deletes it&lt;/li&gt;
&lt;li&gt;Consumers can be running on EC2/AWS Lamda, on-prem servers&lt;/li&gt;
&lt;li&gt;Consumers Poll SQS messages, up to 10 at a time, then delete message using DeleteMessage API&lt;/li&gt;
&lt;li&gt;SQS Queue + ASG with CloudWatch Metric of Queue Length + Cloud Watch Alarm&lt;/li&gt;
&lt;li&gt;As the EC2 scales up, the same message can be sent to many EC2s, thus remember: at least once, may not be orderly&lt;/li&gt;
&lt;li&gt;Security: at-rest KMS, in-flight HTTPS API, Access Control via IAM to regulate the access to SQS (who can add to/ poll queue), and SQS Access Policies to manage SNS,S3 etc to write to an SQS Queue&lt;/li&gt;
&lt;li&gt;Access Policies are similar to S3; cross account (EC2 in one aws account can poll another account SQS Queue)&lt;/li&gt;
&lt;li&gt;Another policy is: Publish S3 Event Notifications to SQS Queue, for instance when someone uploads an object to S3 Bucket, S3 Events can be published to SQS Queue and the JSON Policy for that should include Condition [Exam]&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Message Visibility Timeout&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The SQS Queue processing architecture: Visibility Timeout: when a message is being processed by a consumer, that message becomes invisible to other consumers. So no rush case. But if not processed during the timeout, it goes back to the queue, thus can be processed twice; as well, if the consumer did not delete it after processing, it goes back to the queue&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The consumers can also call, ChangeMessageVisibility API to delay the processing time for that specific message&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Dead Letter Queue&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;When a message is not processed x times, then put it in the Dead Letter Queue (DLQ)&lt;/li&gt;
&lt;li&gt;After MaximumReceives threshold is surpassed; the message is sent to DLQ&lt;/li&gt;
&lt;li&gt;If you have lots of messages and not processed on time and sent back to the SQS Queue again and again, it can be sent to DLQ as well, even though the message itself had no problems&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Delay Queue&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Possible to delay the message to be polled from the queue&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Long Polling&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Why? Decrease the latency and minimize the number of api calls to the queue&lt;/li&gt;
&lt;li&gt;Can be done via WaitTimeSeconds&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Requet - Response Pattern&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;When a producer, sends a message to the queue, it can also attach, response to property, where the response will go to another queue&lt;/li&gt;
&lt;li&gt;Then another producers can read from this second queue to continue on the request-response cycle&lt;/li&gt;
&lt;li&gt;Amazon already implemented such pattern, called SQS Temporary Queue Client, it is more cost effective then developers building such system into AWS&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;FIFO Queues&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;First in First Out&lt;/li&gt;
&lt;li&gt;Guaranteed to be processed in order&lt;/li&gt;
&lt;li&gt;Sent to the queue only once (if message does not contain deduplication ID, AWS hashes the message body to compare)&lt;/li&gt;
&lt;li&gt;Limited capacity, 3000 when batches otherwise 300 msgs per second&lt;/li&gt;
&lt;li&gt;Use when order is important (i.e price changes) or student cannot enroll to class before registering&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;SNS&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Publish to an SNS Topic and have many subscribers&lt;/li&gt;
&lt;li&gt;Instead of having one producer/consumer, why not send the same message to many receivers?&lt;/li&gt;
&lt;li&gt;For example, When an order is received for a product, send an email notification to the client, send the order to the inventory, and check for payment and even put it into an SQS Queue&lt;/li&gt;
&lt;li&gt;Send one message to one topic, and each subscribers will get all the messages (possible to filter as well)&lt;/li&gt;
&lt;li&gt;10 million subscribers and 100,000 topics are possible&lt;/li&gt;
&lt;li&gt;An SQS can be a subscriber as well as Lambda functions, or emails/text etc.&lt;/li&gt;
&lt;li&gt;Many AWS services can send data to an SNS topic&lt;/li&gt;
&lt;li&gt;For direct publish architecture (mobile apps SDK), create a platform endpoint and and publish there so mobile end users get notification&lt;/li&gt;
&lt;li&gt;Who can access SNS API (i.e. developer)? Regulate Access Control&lt;/li&gt;
&lt;li&gt;Who can write to SNS topic (i.e. S3 Event) ? Regulate Access Policies&lt;/li&gt;
&lt;li&gt;Security: Encryption at rest and in flight&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;SNS + SQS Queue Fan Out&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;SQS Queues to subscribe to one SNS Topic&lt;/li&gt;
&lt;li&gt;Publish the message to SNS Topic and the same message will be sent to the subscribed queues&lt;/li&gt;
&lt;li&gt;SNS should be allowed in SQS Access Policies to write into the queues&lt;/li&gt;
&lt;li&gt;SNS allows message filtering as well, so SQS subscribers can only receive relevant messages to the queue&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Kinesis&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Real-time data processing/analysis&lt;/li&gt;
&lt;li&gt;Logs, click streams, metrics, telemetry data etc&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Containers&lt;/h3&gt;
&lt;p&gt;Section 18&lt;/p&gt;
&lt;h4&gt;ECS Overview&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;On ECS, the user provisions &amp;#x26; maintains the EC2 infrastructure&lt;/li&gt;
&lt;li&gt;Then ECS Service decides where to place the containers&lt;/li&gt;
&lt;li&gt;Two launch types: EC2 Launch Type and Fargate&lt;/li&gt;
&lt;li&gt;Can create an ECS cluster across AZs in a Region&lt;/li&gt;
&lt;li&gt;Multi EC2s register to ASG(s), which are registered to ECS Cluster&lt;/li&gt;
&lt;li&gt;When registered, ECS agent is attached to each EC2s&lt;/li&gt;
&lt;li&gt;Then user can run ECS Tasks such as run httpd server&lt;/li&gt;
&lt;li&gt;Fargate is serverless, does not manage EC2s, no need to manage the infrastructure&lt;/li&gt;
&lt;li&gt;Requirement: Set CPU/RAM requirements and&lt;/li&gt;
&lt;li&gt;For each Task to run in Fargate, there is an ENI created (one-to-one)&lt;/li&gt;
&lt;li&gt;Since ENI requires private IP addresses, make sure VPC has enough Private IP available for each task&lt;/li&gt;
&lt;li&gt;ECS tasks can interact with other AWS services (DB, SNS etc)&lt;/li&gt;
&lt;li&gt;[Potential Exam Question] EC2 Instance Profile and ECS Task Role&lt;/li&gt;
&lt;li&gt;Remember, in EC2 Launch Profile in ECS, user manages the EC2s; and ECS Agents are attached to the EC2. Therefore EC2 needs to communicate with the ECS service (make api calls), or send logs to CloudWatch service, or pull images from the AWS Registry service ECR, or pull secrets. But to do all of that EC2 needs IAM Permission. That is called EC2 Instance Profile&lt;/li&gt;
&lt;li&gt;But we haven’t added any task to the container service. So the permission assigned to the Tasks are ECS Task Role [Another Exam Question]. Make sure that you have a dedicated ECS Task Role for each Task and Task Role is defined in the Task Definition&lt;/li&gt;
&lt;li&gt;Data volumes can be hosted in EFS and EC2 Tasks/Fargate tasks can share data amongs the container.&lt;/li&gt;
&lt;li&gt;Use Case mutli-az shared storage for containers without managing and infra (i.e. serverless)=&gt; Fargate + EFS&lt;/li&gt;
&lt;li&gt;Load Balancing in EC2 Launch Type: Do not expose a dedicated port, let ECS take care of it. Connect to ALB and allow ALB security group to access any port on the EC2&lt;/li&gt;
&lt;li&gt;For Fargate, since ENI is attached it has unique IP but exposes the same port (say 80), so for security, allow ALB to access the same Task Port on all ENI&lt;/li&gt;
&lt;li&gt;Can automate the tasks via S3 Bucket Event emitting an event to Amazon EventBridge running an ECS Task on the ECS Cluster that has correct ECS Task Role to execute (i.e. get S3 object, transform save in DynamoDB requires ECS Task Role to have S3/DynamoDB access rights)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Scaling&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Create CloudWatch Metric (for RAM/CPU useage), triggers CloudWatch Alarm, that scales containers, thanks to ASG&lt;/li&gt;
&lt;li&gt;What if the client is using EC2 Launch type and wants to scale up EC2 size? That is also available through Scale ECS Providers&lt;/li&gt;
&lt;li&gt;Alternative is SQS Queue; create an SQS Queue and ECS that polls messages from SQS, then again create CloudWatch Metric for Queue Length and the rest is the same&lt;/li&gt;
&lt;li&gt;Similar to Kubernetes Rolling Updates, ECS also provides the same functionality&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;ECR&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;DockerHub for AWS, supporting ECS + IAM&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;EKS&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Managed Kubernetes Cluster, competing with RedHat Openshift Container Platform&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Serverless&lt;/h3&gt;
&lt;p&gt;Section 19 &amp;#x26; 20&lt;/p&gt;
&lt;h3&gt;More Databases&lt;/h3&gt;
&lt;p&gt;Section 21&lt;/p&gt;
&lt;h3&gt;Auditing and Logging&lt;/h3&gt;
&lt;p&gt;Section 22&lt;/p&gt;
&lt;h3&gt;IAM Advanced&lt;/h3&gt;
&lt;p&gt;Section 23&lt;/p&gt;
&lt;h3&gt;Security and Encryption&lt;/h3&gt;
&lt;p&gt;Section 24&lt;/p&gt;
&lt;h3&gt;VPC&lt;/h3&gt;
&lt;p&gt;Section 25&lt;/p&gt;
&lt;h3&gt;Disaster Recovery&lt;/h3&gt;
&lt;p&gt;Section 26&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Ansible Playbooks]]></title><description><![CDATA[Ansible Playbook is a YAML file that contains set of activities to run on host machine(s). An analogy to a workshop could be, hosts are your…]]></description><link>https://orhanIBM.github.io/blog/ansible-playbooks/</link><guid isPermaLink="false">https://orhanIBM.github.io/blog/ansible-playbooks/</guid><pubDate>Wed, 29 Dec 2021 12:26:31 GMT</pubDate><content:encoded>&lt;p&gt;Ansible Playbook is a YAML file that contains set of activities to run on host machine(s).&lt;/p&gt;
&lt;p&gt;An analogy to a workshop could be, &lt;strong&gt;hosts&lt;/strong&gt; are your raw materials, &lt;strong&gt;modules&lt;/strong&gt; are the tools in your workshop and &lt;strong&gt;playbooks&lt;/strong&gt; are the instruction manual of how to use each &lt;em&gt;module&lt;/em&gt; to craft the &lt;em&gt;host&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A playbook can be as simple as run command on the server and done with it or as complex as provisioning the full web/app servers and db, seting up network connectivity between, adding reverse proxy and load balancers, monitoring connections and updating all with required patches.&lt;/p&gt;
&lt;p&gt;Given an inventory file&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;inventory.ini&quot;&gt;&lt;pre class=&quot;language-inventory.ini&quot;&gt;&lt;code class=&quot;language-inventory.ini&quot;&gt;# inventory.ini, after ansible_hosts, variables are just for reference
[dev]
dev1 ansible_host=123.x.x.x ansible_user=root
dev2 ansible_host=123.x.x.x ansible_connection=ssh ansible_port=22

[test]
...
[staging]
...
[production]
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The playbook will execute the plays. The example below will install httpd to dev servers stated in the inventory.ini file.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;playbook.yml&quot;&gt;&lt;pre class=&quot;language-playbook.yml&quot;&gt;&lt;code class=&quot;language-playbook.yml&quot;&gt;# playbook.yml

---
# Play 1
- name: Update dev
  hosts: dev
  remote_user: root 

  tasks:

  - name: ensure apache is at the latest version
    # below is an ansible modules
    ansible.builtin.yum:
        name: httpd
        state: latest
  
  - name: Write the apache config file
    # below is an ansible module
    ansible.builtin.template:
        src: /srv/httpd.js
        dest: /etc/httpd.conf

# Play 2
- name: Update database servers
  ...
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Ansible vs Terraform]]></title><description><![CDATA[Both Ansible and Terraform are DevOps tools that adopts Infrastructure as a Code paradigm. Both Ansible and Terraform can provision…]]></description><link>https://orhanIBM.github.io/blog/ansible-vs-terraform/</link><guid isPermaLink="false">https://orhanIBM.github.io/blog/ansible-vs-terraform/</guid><pubDate>Wed, 29 Dec 2021 11:44:46 GMT</pubDate><content:encoded>&lt;p&gt;Both Ansible and Terraform are DevOps tools that adopts Infrastructure as a Code paradigm.&lt;/p&gt;
&lt;p&gt;Both Ansible and Terraform can provision infrastructure and manage infrastructure lifecycle.&lt;/p&gt;
&lt;p&gt;How? Red Hat Ansible Automation Platform can provision the latest cloud platforms, VMs, network devices and bare-metal servers.&lt;/p&gt;
&lt;p&gt;[Marketing here] So if anyone tells you that Ansible requires pre-set host addresses given in an inventory file, ask them if they heard about Red Hat Ansible Automation Platform.&lt;/p&gt;
&lt;p&gt;The main difference, however, could be Terraform’s declerative model whereas Ansible’s procedural pattern, similar to a pipeline of tasks.&lt;/p&gt;
&lt;p&gt;For more see &lt;a href=&quot;https://www.ansible.com&quot;&gt;Red Hat Ansible&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Ansible Modules]]></title><description><![CDATA[Modules are task libraries for Ansibles. They can be used from the cli or in a playbook. Ansible will execute the module on the remote host…]]></description><link>https://orhanIBM.github.io/blog/ansible-modules/</link><guid isPermaLink="false">https://orhanIBM.github.io/blog/ansible-modules/</guid><pubDate>Wed, 29 Dec 2021 02:26:32 GMT</pubDate><content:encoded>&lt;p&gt;Modules are task libraries for Ansibles.&lt;/p&gt;
&lt;p&gt;They can be used from the cli or in a playbook.&lt;/p&gt;
&lt;p&gt;Ansible will execute the module on the remote host, collects and return values.&lt;/p&gt;
&lt;p&gt;For example to restart all webservers listed in inventory file&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;ansible webservers -m command - a &quot;/sbin/reboot -t now&quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To find more about modules, just search for &lt;em&gt;ansible docs modules latest user guide&lt;/em&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Ansible Inventory]]></title><description><![CDATA[Ansible can work with multiple servers. But Ansible needs to access the target machines. For linux these machines are through ssh and for…]]></description><link>https://orhanIBM.github.io/blog/ansible-inventory/</link><guid isPermaLink="false">https://orhanIBM.github.io/blog/ansible-inventory/</guid><pubDate>Wed, 29 Dec 2021 02:03:32 GMT</pubDate><content:encoded>&lt;p&gt;Ansible can work with multiple servers.&lt;/p&gt;
&lt;p&gt;But Ansible needs to access the target machines.&lt;/p&gt;
&lt;p&gt;For linux these machines are through ssh and for windows through Powershell Remoting&lt;/p&gt;
&lt;p&gt;So no need to install any application to the target machines.&lt;/p&gt;
&lt;p&gt;Those target machines are in an inventory file.&lt;/p&gt;
&lt;p&gt;By default ansible looks at /etc/ansible/hosts file if you do not set up one.&lt;/p&gt;
&lt;p&gt;Ansible inventory file can contain more parameters&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ansible_host&lt;/li&gt;
&lt;li&gt;ansible_connection - ssh/winrm/localhost&lt;/li&gt;
&lt;li&gt;ansible_port - 22/5986&lt;/li&gt;
&lt;li&gt;ansible_user - root/admin/…&lt;/li&gt;
&lt;li&gt;ansible_ssh_pass - password, but use keyless in production&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;an example could be&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;inventory.ini&quot;&gt;&lt;pre class=&quot;language-inventory.ini&quot;&gt;&lt;code class=&quot;language-inventory.ini&quot;&gt;//inventory.ini file
target1 ansible_host=192.168.1.10 ansible_connection=ssh ansible_port=22 ansible_user=root ansible_ssh_pass=password&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then run the following ansible command to ping target1 server&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;$ ansible target1 -m ping -i inventory.ini&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;here we are running ping module on target servers located in inventory file.&lt;/p&gt;
&lt;p&gt;If you have more than one target, you can group them&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;inventory.ini&quot;&gt;&lt;pre class=&quot;language-inventory.ini&quot;&gt;&lt;code class=&quot;language-inventory.ini&quot;&gt;server1.example.com
server2.example.com

[web]
web1.example.com
web2.example.com

[db]
db.example.com&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or YAML&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;inventory.yaml&quot;&gt;&lt;pre class=&quot;language-inventory.yaml&quot;&gt;&lt;code class=&quot;language-inventory.yaml&quot;&gt;#inventory yaml file:
all:
    hosts:
        example.com
    childern:
        webservers:
            hosts:
                192.168.0.1
                192.168.0.5
        
        dbservers:
            hosts:
                192.168.0.10
                
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;so to &lt;em&gt;execute ping module on webservers&lt;/em&gt;, all you have to do is:&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt; $ ansible webservers -m ping -i inventory.yaml&lt;/code&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Edit Strings in Go]]></title><description><![CDATA[In Golang, strings are immutable. Unlike Python or Javascript, strings cannot be edited by accessing its index. To better explain in Python…]]></description><link>https://orhanIBM.github.io/blog/edit-string-in-golang/</link><guid isPermaLink="false">https://orhanIBM.github.io/blog/edit-string-in-golang/</guid><pubDate>Tue, 28 Dec 2021 15:50:32 GMT</pubDate><content:encoded>&lt;p&gt;In Golang, strings are immutable.&lt;/p&gt;
&lt;p&gt;Unlike Python or Javascript, strings cannot be edited by accessing its index.&lt;/p&gt;
&lt;p&gt;To better explain in Python, the following is possible, but not in Golang.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# python&lt;/span&gt;

s &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;string&apos;&lt;/span&gt;
s&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;S&apos;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# prints String&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So in Golang, rune or slicer method can be used.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Rune option&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;go&quot;&gt;&lt;pre class=&quot;language-go&quot;&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// golang&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; index &lt;span class=&quot;token builtin&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; c &lt;span class=&quot;token builtin&quot;&gt;rune&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    s_rune &lt;span class=&quot;token operator&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;rune&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    s_rune&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;index&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; c
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s_rune&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;such that you can use it as&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;go&quot;&gt;&lt;pre class=&quot;language-go&quot;&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// golang &lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;package&lt;/span&gt; main

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    r &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;S&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    fmt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;r&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// String&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// func replace here&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively,
&lt;strong&gt;Slice option&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;go&quot;&gt;&lt;pre class=&quot;language-go&quot;&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// golang&lt;/span&gt;
myString &lt;span class=&quot;token operator&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;string&quot;&lt;/span&gt;
myString &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;S&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; myString&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[For Loop]]></title><description><![CDATA[The C style for loop is similar in Golang but different in Python. In Go, one can initiate an index and increment it until a certain…]]></description><link>https://orhanIBM.github.io/blog/loop-in-python/</link><guid isPermaLink="false">https://orhanIBM.github.io/blog/loop-in-python/</guid><pubDate>Tue, 28 Dec 2021 13:50:32 GMT</pubDate><content:encoded>&lt;p&gt;The C style for loop is similar in Golang but different in Python.&lt;/p&gt;
&lt;p&gt;In Go, one can initiate an index and increment it until a certain condition is met.&lt;/p&gt;
&lt;p&gt;In Python, to generate an index for an iterable, one can use enumerate or range(len(iterable_item)) function.&lt;/p&gt;
&lt;p&gt;To demonstrate:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;go&quot;&gt;&lt;pre class=&quot;language-go&quot;&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// golang&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    fmt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# python&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and in case item is an iterable, such as a string or a list.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# python&lt;/span&gt;
s &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;python&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; v &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; v&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;    &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The range functionality is not unique to Python. Golang, has the same capability as well, with one upside. The range returns both index and item.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;go&quot;&gt;&lt;pre class=&quot;language-go&quot;&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// golang&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; v in &lt;span class=&quot;token keyword&quot;&gt;range&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Golang&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    fmt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;The index of character %c is %d\n&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; v&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, note that if a declared value is not used, go compiler throws an error, thus has to be omitted. Use underscore character to omit a value.&lt;/p&gt;
&lt;p&gt;Below, we are ignoring the index.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;go&quot;&gt;&lt;pre class=&quot;language-go&quot;&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// golang&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; v in &lt;span class=&quot;token keyword&quot;&gt;range&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Text&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    fmt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;v&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Graphs]]></title><description><![CDATA[This is the summary of graph algorithms course by Alvin Zablan @ Structy. I really like his teaching technique. He takes the time to explain…]]></description><link>https://orhanIBM.github.io/blog/graphs/</link><guid isPermaLink="false">https://orhanIBM.github.io/blog/graphs/</guid><pubDate>Tue, 21 Dec 2021 13:50:32 GMT</pubDate><content:encoded>&lt;p&gt;This is the summary of graph algorithms course by Alvin Zablan @ &lt;a href=&quot;https://www.structy.net/&quot;&gt;Structy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I really like his teaching technique. He takes the time to explain things in detail. You can give it a free try at Structy too.&lt;/p&gt;
&lt;p&gt;This blog is mostly a blue-print / pseudocode to myself. Not exhaustive or aims to teach the reader about the details, but rather a note to myself.&lt;/p&gt;
&lt;p&gt;The graph algorithms begin with a search. Depth First versus Breath First.&lt;/p&gt;
&lt;p&gt;Note that these are Directed Acyclical Graphs (DAGs). More on that later…&lt;/p&gt;
&lt;h3&gt;Depth First Search&lt;/h3&gt;
&lt;p&gt;There are two ways to achieve the Depth First Search (DFS).&lt;/p&gt;
&lt;p&gt;First pattern is recursive (obviously) and second pattern is a stack based loop. But either way, the graph is represented with an object/hashmap/dict, where key represents the vertex and values are the edges to the vertices. An example is:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; graph &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    a&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;b&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;c&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    b&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;c&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    c&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The recursive pattern pseudocode&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;depth_first&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;graph&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; vertex&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// base case, execute and stop&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// recursive case &lt;/span&gt;
    
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;vertex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;//&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; neighbour &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; graph&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;vertex&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;depth_first&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;graph&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; neighbour&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Loop pattern&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;cosnt &lt;span class=&quot;token function-variable function&quot;&gt;depth_first&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;graph&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; starting_vertex&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// base case &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// create a stack: const stack = [starting_vertex];&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// as long as there are elements on the vertex, process them &lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// then add each neighbour of the current vertex into the stack&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// i.e.&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; stack &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;starting_vertex&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stack&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; current_vertex &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; stack&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; neighbour &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; graph&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;current_vertex&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            stack&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;neighbour&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Breadth First Search&lt;/h3&gt;
&lt;p&gt;For Breadth First Search (BFS), instead of implementing a stack, where the last one added is processed first, this will be a queue, where first in is first out. And add the children of the current item on the queue, to the end of the line.&lt;/p&gt;
&lt;p&gt;The pattern is a single loop over a queue. There is not a recursive pattern here.&lt;/p&gt;
&lt;p&gt;Using the same graph object:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; graph &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    a&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;b&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;c&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    b&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;c&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    c&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;BFS pseudo code for printing elements are:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;bread_first_search&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;graph&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; vertex&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// create a queue with the first item being the starting vertex&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// then as long as there are items to process in the queue&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// process it, and then add the children of the queue to the END of the queue &lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; queue &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;vertex&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;queue&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; current_vertex &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; queue&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// returns the first element from the queue, while removing it from the array;&lt;/span&gt;
        console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;current_vertex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; neighbour &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; graph&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;current_vertex&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            queue&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;neighbour&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Undirected Graphs&lt;/h3&gt;
&lt;p&gt;Undirected graphs are same as DAGs but edges are both ways. Assume that there is a vertex m and vertex n, and these are connected it would be represented as&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// eges are represented as an array of arrays, because there can be other vertices that are connected in the list&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; edges &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;m&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;n&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since we have the graph object as adjacency list, shown in the previous section, why not convert to it?&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;//convert edges to adjacency list, while keeping both directions&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; graph &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    m &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;n&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    n &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;m&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But this bring cyclicality issues&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// edges can be cyclical too&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// i points to j, which points to k but k can point back to i&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; edges &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;i&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;j&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;j&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;k&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;k&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;i&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To avoid infinity loop above, the solution is to create a Set that tracks the vertices that we already visited.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[All About Me]]></title><description><![CDATA[I decided to keep my notes online and here it goes. Check me out at IBM!]]></description><link>https://orhanIBM.github.io/blog/about-me/</link><guid isPermaLink="false">https://orhanIBM.github.io/blog/about-me/</guid><pubDate>Mon, 20 Dec 2021 13:50:32 GMT</pubDate><content:encoded>&lt;p&gt;I decided to keep my notes online and here it goes.&lt;/p&gt;
&lt;p&gt;Check me out at IBM!&lt;/p&gt;</content:encoded></item></channel></rss>