{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/loop-in-python/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Orhan's Blog"}},"markdownRemark":{"id":"348d0758-9f0f-5ed0-9851-c86299b62f34","excerpt":"The C style for loop is similar in Golang but different in Python. In Go, one can initiate an index and increment it until a certain condition is met. In Pythonâ€¦","html":"<p>The C style for loop is similar in Golang but different in Python.</p>\n<p>In Go, one can initiate an index and increment it until a certain condition is met.</p>\n<p>In Python, to generate an index for an iterable, one can use enumerate or range(len(iterable_item)) function.</p>\n<p>To demonstrate:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">// golang</span>\n<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">{</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># python</span>\n<span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span></code></pre></div>\n<p>and in case item is an iterable, such as a string or a list.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># python</span>\ns <span class=\"token operator\">=</span> <span class=\"token string\">\"python\"</span>\n<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span>    </code></pre></div>\n<p>The range functionality is not unique to Python. Golang, has the same capability as well, with one upside. The range returns both index and item.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">// golang</span>\n<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> v in <span class=\"token keyword\">range</span> <span class=\"token string\">\"Golang\"</span> <span class=\"token punctuation\">{</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The index of character %c is %d\\n\"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Finally, note that if a declared value is not used, go compiler throws an error, thus has to be omitted. Use underscore character to omit a value.</p>\n<p>Below, we are ignoring the index.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">// golang</span>\n<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> v in <span class=\"token keyword\">range</span> <span class=\"token string\">\"Text\"</span> <span class=\"token punctuation\">{</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Print</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>","frontmatter":{"title":"For Loop","date":"December 28, 2021","description":"For Loop in Python vs Golang"}},"previous":{"fields":{"slug":"/about-me/"},"frontmatter":{"title":"All About Me"}},"next":{"fields":{"slug":"/edit-string-in-golang/"},"frontmatter":{"title":"Edit Strings in Go"}}},"pageContext":{"id":"348d0758-9f0f-5ed0-9851-c86299b62f34","previousPostId":"a33fe95f-6cee-502f-a3b1-5fa4a04475b2","nextPostId":"b9b2a136-c131-5a8d-a666-ab56513856f5"}},
    "staticQueryHashes": ["2841359383","3257411868"]}